<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>VisionDetect - AI Vision Inspection</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
            color: #333;
        }

        header {
            background-color: #2c3e50;
            color: white;
            text-align: center;
            padding: 20px;
        }

        main {
            max-width: 1200px;
            margin: 20px auto;
            padding: 20px;
            display: flex;
            gap: 20px;
        }

        .controls, .results {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            flex: 1;
        }

        .upload-section, .model-section {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        input[type="file"], select {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
        }

        button {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
        }

        button:hover {
            background-color: #2980b9;
        }

        .image-preview img {
            max-width: 100%;
            height: auto;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        #resultText {
            margin-top: 20px;
            padding: 10px;
            background: #ecf0f1;
            border-radius: 5px;
        }

        footer {
            text-align: center;
            padding: 10px;
            background-color: #2c3e50;
            color: white;
            position: fixed;
            bottom: 0;
            width: 100%;
        }
    </style>
</head>
<body>
    <header>
        <h1>VisionDetect</h1>
        <p>Next-Level Deep Learning Vision Inspection</p>
    </header>
    
    <main>
        <section class="controls">
            <h2>Inspection Dashboard</h2>
            <div class="upload-section">
                <label for="imageUpload">Upload Image:</label>
                <input type="file" id="imageUpload" accept="image/*">
                <button onclick="previewImage()">Preview</button>
            </div>
            <div class="model-section">
                <label for="modelSelect">Select Model:</label>
                <select id="modelSelect">
                    <option value="defect">Defect Detection</option>
                    <option value="classify">Object Classification</option>
                    <option value="segment">Image Segmentation</option>
                </select>
                <button onclick="runInspection()">Run Inspection</button>
            </div>
        </section>

        <section class="results">
            <h2>Results</h2>
            <div class="image-preview">
                <img id="preview" src="" alt="Image Preview" style="display: none;">
            </div>
            <div id="resultText">Inspection results will appear here.</div>
        </section>
    </main>

    <footer>
        <p>Â© 2025 VisionDetect. Inspired by industry leaders.</p>
    </footer>

    <script>
        function previewImage() {
            const fileInput = document.getElementById('imageUpload');
            const preview = document.getElementById('preview');
            const file = fileInput.files[0];
            
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                };
                reader.readAsDataURL(file);
            }
        }

        async function runInspection() {
            const fileInput = document.getElementById('imageUpload');
            const model = document.getElementById('modelSelect').value;
            const resultText = document.getElementById('resultText');
            const preview = document.getElementById('preview');
            const file = fileInput.files[0];

            if (!file) {
                resultText.innerText = "Please upload an image first.";
                return;
            }

            const formData = new FormData();
            formData.append("image", file);
            formData.append("model", model);

            resultText.innerText = "Processing...";

            try {
                const response = await fetch("http://localhost:5000/api/process", {
                    method: "POST",
                    body: formData
                });
                const result = await response.json();

                if (result.error) {
                    resultText.innerText = result.error;
                    return;
                }

                if (model === "defect") {
                    preview.src = result.annotated_image;
                    preview.style.display = "block";
                    resultText.innerText = "Detections:\n" + result.detections
                        .map(d => `${d.label}: ${d.score.toFixed(2)}`)
                        .join("\n");
                } else if (model === "classify") {
                    resultText.innerText = `Classified as: ${result.label}`;
                } else {
                    resultText.innerText = "Segmentation not implemented yet.";
                }
            } catch (error) {
                resultText.innerText = "Error: " + error.message;
            }
        }
    </script>
</body>
</html>